{"version":3,"sources":["webpack:///./src/pages/works.js"],"names":["query","ContentfulProject","data","React","useState","isotope","setIsotope","filterKey","setFilterKey","useEffect","window","Isotope","itemSelector","layoutMode","arrange","filter","title","className","modifier","map","i","onClick","allContentfulProject","edges","project","category","node","key","style","backgroundImage","image","fluid","src","name","to","slug","direction"],"mappings":"6NAmIaA,EAAK,aA6BHC,UAxJW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAERC,IAAMC,SAAS,MAAtCC,EAF+B,KAEtBC,EAFsB,OAIJH,IAAMC,SAAS,KAA1CG,EAJ+B,KAIpBC,EAJoB,KAOtCL,IAAMM,WAAU,WACQ,oBAAXC,QACTJ,EACE,IAAIK,QAAQ,YAAa,CACvBC,aAAc,kBACdC,WAAY,eAIjB,IAGHV,IAAMM,WAAU,WACQ,oBAAXC,QACLL,IACY,MAAdE,EACIF,EAAQS,QAAQ,CAAEC,OAAO,MACzBV,EAAQS,QAAQ,CAAEC,OAAO,IAAKR,OAGrC,CAACF,EAASE,IA8Bb,OACE,oCACE,kBAAC,IAAD,CAAKS,MAAM,UACQ,oBAAXN,QACN,6BAASO,UAAU,uDACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,sCAAd,SACA,6BACA,yBAAKA,UAAU,eArCP,CAClB,CACED,MAAO,MACPD,OAAQ,IACRG,SAAU,IAEZ,CACEF,MAAO,WACPD,OAAQ,MACRG,SAAU,OAEZ,CACEF,MAAO,gBACPD,OAAQ,eACRG,SAAU,gBAEZ,CACEF,MAAO,YACPD,OAAQ,YACRG,SAAU,aAEZ,CACEF,MAAO,aACPD,OAAQ,YACRG,SAAU,eAcaC,KAAI,WAA8BC,GAA9B,IAAGJ,EAAH,EAAGA,MAAOD,EAAV,EAAUA,OAAQG,EAAlB,EAAkBA,SAAlB,OACf,yBAAKD,UAAU,cACb,4BACEA,UAAS,QAASC,EAAW,QAAUA,EAAW,IAClDG,QAAS,kBAAMb,EAAaO,KAE5B,0BAAME,UAAU,aAAaD,SAKrC,yBAAKC,UAAU,YACZf,EAAKoB,qBAAqBC,MAAMJ,KAAI,SAACK,EAASJ,GAC7C,IAAMK,EAAWD,EAAQE,KAAKD,SAC9B,OACE,yBAAKR,UAAS,kBAAoBQ,EAAYE,IAAKP,GACjD,yBAAKH,UAAS,8BAAgCQ,GAC5C,yBAAKR,UAAU,4BACb,yBACEA,UAAU,mBACVW,MAAO,CACLC,gBAAgB,OAAQL,EAAQE,KAAKI,MAAMC,MAAMC,IAAlC,QAIrB,yBAAKf,UAAU,uBACb,4BAAQA,UAAU,wBAChB,wBAAIA,UAAU,iCACXO,EAAQE,KAAKO,OAGlB,yBAAKhB,UAAU,yBACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CACEA,UAAS,sCAAwCQ,EACjDS,GAAE,UAAYV,EAAQE,KAAKS,KAC3BC,UAAU,OAHZ","file":"component---src-pages-works-js-517e91c34de9e9f9fbdb.js","sourcesContent":["import MenuLink from \"../components/menu-link\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from \"react\"\n// import Isotope from \"isotope-layout/js/isotope\"\n\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst ContentfulProject = ({ data }) => {\n  // store the isotope object in one state\n  const [isotope, setIsotope] = React.useState(null)\n  // store the filter keyword in another state\n  const [filterKey, setFilterKey] = React.useState(\"*\")\n\n  // initialize an Isotope object with configs\n  React.useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      setIsotope(\n        new Isotope(\".projects\", {\n          itemSelector: \".projects__item\",\n          layoutMode: \"fitRows\",\n        })\n      )\n    }\n  }, [])\n\n  // handling filter key change\n  React.useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      if (isotope) {\n        filterKey === \"*\"\n          ? isotope.arrange({ filter: `*` })\n          : isotope.arrange({ filter: `.${filterKey}` })\n      }\n    }\n  }, [isotope, filterKey])\n\n  const controllers = [\n    {\n      title: \"All\",\n      filter: \"*\",\n      modifier: \"\",\n    },\n    {\n      title: \"HTML/CSS\",\n      filter: \"css\",\n      modifier: \"css\",\n    },\n    {\n      title: \"Game landings\",\n      filter: \"game-landing\",\n      modifier: \"game-landing\",\n    },\n    {\n      title: \"Wordpress\",\n      filter: \"wordpress\",\n      modifier: \"wordpress\",\n    },\n    {\n      title: \"Frameworks\",\n      filter: \"react_vue\",\n      modifier: \"frameworks\",\n    },\n  ]\n\n  return (\n    <>\n      <SEO title=\"Works\" />\n      {typeof window !== \"undefined\" && (\n        <section className=\"hero has-background-light is-fullheight-with-navbar\">\n          <div className=\"hero-body hero-body--projects\">\n            <div className=\"container\">\n              <h1 className=\"page-title is-1 title is-text-bold\">Works</h1>\n              <hr />\n              <div className=\"controllers\">\n                {controllers.map(({ title, filter, modifier }, i) => (\n                  <div className=\"controller\">\n                    <button\n                      className={`btn ${modifier ? \"btn--\" + modifier : \"\"}`}\n                      onClick={() => setFilterKey(filter)}\n                    >\n                      <span className=\"btn__text\">{title}</span>\n                    </button>\n                  </div>\n                ))}\n              </div>\n              <div className=\"projects\">\n                {data.allContentfulProject.edges.map((project, i) => {\n                  const category = project.node.category\n                  return (\n                    <div className={`projects__item ${category}`} key={i}>\n                      <div className={`project-card project-card--${category}`}>\n                        <div className=\"project-card__bg-wrapper\">\n                          <div\n                            className=\"project-card__bg\"\n                            style={{\n                              backgroundImage: `url(${project.node.image.fluid.src})`,\n                            }}\n                          ></div>\n                        </div>\n                        <div className=\"project-card__inner\">\n                          <header className=\"project-card__header\">\n                            <h3 className=\"is-size-4 project-card__title\">\n                              {project.node.name}\n                            </h3>\n                          </header>\n                          <div className=\"project-card__content\">\n                            <div className=\"content\">\n                              <MenuLink\n                                className={`button is-small is-rounded button--${category}`}\n                                to={`/works/${project.node.slug}`}\n                                direction=\"top\"\n                              >\n                                More about\n                              </MenuLink>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n    </>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allContentfulProject(sort: { fields: [updatedAt], order: DESC }) {\n      edges {\n        node {\n          href\n          childContentfulProjectDescriptionRichTextNode {\n            content {\n              content {\n                value\n              }\n            }\n          }\n          image {\n            fluid {\n              src\n            }\n          }\n          id\n          slug\n          tag\n          name\n          category\n        }\n      }\n    }\n  }\n`\n\nexport default ContentfulProject\n"],"sourceRoot":""}